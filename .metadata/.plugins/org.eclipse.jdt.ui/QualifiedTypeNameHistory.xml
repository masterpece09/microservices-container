<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.post.Post"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.UserValidator"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.UserRepository"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.CustomResponse"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.service.UserService"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.dao.User"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.dao.UserDaoService"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.dao.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.dao.PostRepository"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.UserNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.in28min.webservices.restfullwebservices.user.dao.Post"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.in28min.microservices.limitssevice.configuration.Configuration"/>
    <fullyQualifiedTypeName name="com.in28min.microservices.limitssevice.bean.Limits"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.apache.logging.slf4j.SLF4JLogger"/>
    <fullyQualifiedTypeName name="io.micrometer.core.util.internal.logging.Slf4JLoggerFactory"/>
    <fullyQualifiedTypeName name="io.netty.util.internal.logging.Slf4JLoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.apache.http.client.entity.UrlEncodedFormEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.example.currecyexchange.controller.CircutBreakerController"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
</qualifiedTypeNameHistroy>
